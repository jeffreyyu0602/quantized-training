// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: param.proto

#include "param.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace codegen {

inline constexpr ScalarList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : values_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ScalarList::ScalarList(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ScalarListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScalarListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScalarListDefaultTypeInternal() {}
  union {
    ScalarList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScalarListDefaultTypeInternal _ScalarList_default_instance_;

inline constexpr Memory::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : address_{::uint64_t{0u}},
        partition_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Memory::Memory(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MemoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MemoryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MemoryDefaultTypeInternal() {}
  union {
    Memory _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MemoryDefaultTypeInternal _Memory_default_instance_;

inline constexpr IntList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : values_{},
        _values_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR IntList::IntList(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct IntListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IntListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IntListDefaultTypeInternal() {}
  union {
    IntList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IntListDefaultTypeInternal _IntList_default_instance_;

inline constexpr BoolList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : values_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BoolList::BoolList(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BoolListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BoolListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BoolListDefaultTypeInternal() {}
  union {
    BoolList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BoolListDefaultTypeInternal _BoolList_default_instance_;

inline constexpr Argument::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : arg_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Argument::Argument(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ArgumentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ArgumentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ArgumentDefaultTypeInternal() {}
  union {
    Argument _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ArgumentDefaultTypeInternal _Argument_default_instance_;

inline constexpr OpOverload::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : args_{},
        kwargs_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        op_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        target_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OpOverload::OpOverload(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OpOverloadDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OpOverloadDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OpOverloadDefaultTypeInternal() {}
  union {
    OpOverload _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OpOverloadDefaultTypeInternal _OpOverload_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR OpOverload_KwargsEntry_DoNotUse::OpOverload_KwargsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct OpOverload_KwargsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OpOverload_KwargsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OpOverload_KwargsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    OpOverload_KwargsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OpOverload_KwargsEntry_DoNotUseDefaultTypeInternal _OpOverload_KwargsEntry_DoNotUse_default_instance_;

inline constexpr Tensor::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        shape_{},
        _shape_cached_byte_size_{0},
        tiled_shape_{},
        _tiled_shape_cached_byte_size_{0},
        node_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        dtype_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        memory_{nullptr},
        scratchpad_{nullptr},
        dequant_{nullptr},
        reshape_{nullptr},
        is_none_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Tensor::Tensor(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TensorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TensorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TensorDefaultTypeInternal() {}
  union {
    Tensor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TensorDefaultTypeInternal _Tensor_default_instance_;

inline constexpr TensorList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tensors_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TensorList::TensorList(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TensorListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TensorListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TensorListDefaultTypeInternal() {}
  union {
    TensorList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TensorListDefaultTypeInternal _TensorList_default_instance_;

inline constexpr OpOverloadList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : op_list_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OpOverloadList::OpOverloadList(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OpOverloadListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OpOverloadListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OpOverloadListDefaultTypeInternal() {}
  union {
    OpOverloadList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OpOverloadListDefaultTypeInternal _OpOverloadList_default_instance_;

inline constexpr Operation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : op_type_{},
        return_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Operation::Operation(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OperationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OperationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OperationDefaultTypeInternal() {}
  union {
    Operation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OperationDefaultTypeInternal _Operation_default_instance_;

inline constexpr Model::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : inputs_{},
        parameters_{},
        ops_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Model::Model(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ModelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelDefaultTypeInternal() {}
  union {
    Model _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelDefaultTypeInternal _Model_default_instance_;
}  // namespace codegen
static ::_pb::Metadata file_level_metadata_param_2eproto[12];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_param_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_param_2eproto = nullptr;
const ::uint32_t TableStruct_param_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::codegen::Memory, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::codegen::Memory, _impl_.partition_),
    PROTOBUF_FIELD_OFFSET(::codegen::Memory, _impl_.address_),
    PROTOBUF_FIELD_OFFSET(::codegen::Tensor, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::codegen::Tensor, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::codegen::Tensor, _impl_.node_),
    PROTOBUF_FIELD_OFFSET(::codegen::Tensor, _impl_.shape_),
    PROTOBUF_FIELD_OFFSET(::codegen::Tensor, _impl_.dtype_),
    PROTOBUF_FIELD_OFFSET(::codegen::Tensor, _impl_.memory_),
    PROTOBUF_FIELD_OFFSET(::codegen::Tensor, _impl_.tiled_shape_),
    PROTOBUF_FIELD_OFFSET(::codegen::Tensor, _impl_.scratchpad_),
    PROTOBUF_FIELD_OFFSET(::codegen::Tensor, _impl_.dequant_),
    PROTOBUF_FIELD_OFFSET(::codegen::Tensor, _impl_.reshape_),
    PROTOBUF_FIELD_OFFSET(::codegen::Tensor, _impl_.is_none_),
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,
    1,
    2,
    3,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::codegen::TensorList, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::codegen::TensorList, _impl_.tensors_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::codegen::IntList, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::codegen::IntList, _impl_.values_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::codegen::BoolList, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::codegen::BoolList, _impl_.values_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::codegen::ScalarList, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::codegen::ScalarList, _impl_.values_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::codegen::Argument, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::codegen::Argument, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::codegen::Argument, _impl_.arg_type_),
    PROTOBUF_FIELD_OFFSET(::codegen::OpOverload_KwargsEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::codegen::OpOverload_KwargsEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::codegen::OpOverload_KwargsEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::codegen::OpOverload_KwargsEntry_DoNotUse, value_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::codegen::OpOverload, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::codegen::OpOverload, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::codegen::OpOverload, _impl_.op_),
    PROTOBUF_FIELD_OFFSET(::codegen::OpOverload, _impl_.target_),
    PROTOBUF_FIELD_OFFSET(::codegen::OpOverload, _impl_.args_),
    PROTOBUF_FIELD_OFFSET(::codegen::OpOverload, _impl_.kwargs_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::codegen::OpOverloadList, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::codegen::OpOverloadList, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::codegen::OpOverloadList, _impl_.op_list_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::codegen::Operation, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::codegen::Operation, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::codegen::Operation, _impl_.op_type_),
    PROTOBUF_FIELD_OFFSET(::codegen::Operation, _impl_.return_type_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::codegen::Model, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::codegen::Model, _impl_.inputs_),
    PROTOBUF_FIELD_OFFSET(::codegen::Model, _impl_.parameters_),
    PROTOBUF_FIELD_OFFSET(::codegen::Model, _impl_.ops_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::codegen::Memory)},
        {10, 27, -1, sizeof(::codegen::Tensor)},
        {36, -1, -1, sizeof(::codegen::TensorList)},
        {45, -1, -1, sizeof(::codegen::IntList)},
        {54, -1, -1, sizeof(::codegen::BoolList)},
        {63, -1, -1, sizeof(::codegen::ScalarList)},
        {72, -1, -1, sizeof(::codegen::Argument)},
        {90, 100, -1, sizeof(::codegen::OpOverload_KwargsEntry_DoNotUse)},
        {102, -1, -1, sizeof(::codegen::OpOverload)},
        {115, -1, -1, sizeof(::codegen::OpOverloadList)},
        {125, -1, -1, sizeof(::codegen::Operation)},
        {139, -1, -1, sizeof(::codegen::Model)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::codegen::_Memory_default_instance_._instance,
    &::codegen::_Tensor_default_instance_._instance,
    &::codegen::_TensorList_default_instance_._instance,
    &::codegen::_IntList_default_instance_._instance,
    &::codegen::_BoolList_default_instance_._instance,
    &::codegen::_ScalarList_default_instance_._instance,
    &::codegen::_Argument_default_instance_._instance,
    &::codegen::_OpOverload_KwargsEntry_DoNotUse_default_instance_._instance,
    &::codegen::_OpOverload_default_instance_._instance,
    &::codegen::_OpOverloadList_default_instance_._instance,
    &::codegen::_Operation_default_instance_._instance,
    &::codegen::_Model_default_instance_._instance,
};
const char descriptor_table_protodef_param_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\013param.proto\022\007codegen\",\n\006Memory\022\021\n\tpart"
    "ition\030\001 \001(\005\022\017\n\007address\030\002 \001(\004\"\262\002\n\006Tensor\022"
    "\014\n\004node\030\001 \001(\t\022\r\n\005shape\030\002 \003(\005\022\r\n\005dtype\030\003 "
    "\001(\t\022$\n\006memory\030\004 \001(\0132\017.codegen.MemoryH\000\210\001"
    "\001\022\023\n\013tiled_shape\030\005 \003(\005\022(\n\nscratchpad\030\006 \001"
    "(\0132\017.codegen.MemoryH\001\210\001\001\022)\n\007dequant\030\007 \001("
    "\0132\023.codegen.OpOverloadH\002\210\001\001\022)\n\007reshape\030\010"
    " \001(\0132\023.codegen.OpOverloadH\003\210\001\001\022\017\n\007is_non"
    "e\030\t \001(\010B\t\n\007_memoryB\r\n\013_scratchpadB\n\n\010_de"
    "quantB\n\n\010_reshape\".\n\nTensorList\022 \n\007tenso"
    "rs\030\001 \003(\0132\017.codegen.Tensor\"\031\n\007IntList\022\016\n\006"
    "values\030\001 \003(\003\"\032\n\010BoolList\022\016\n\006values\030\001 \003(\010"
    "\"\034\n\nScalarList\022\016\n\006values\030\001 \003(\001\"\266\002\n\010Argum"
    "ent\022!\n\006tensor\030\001 \001(\0132\017.codegen.TensorH\000\022*"
    "\n\013tensor_list\030\002 \001(\0132\023.codegen.TensorList"
    "H\000\022$\n\010int_list\030\003 \001(\0132\020.codegen.IntListH\000"
    "\022\023\n\tint_value\030\004 \001(\003H\000\022\025\n\013float_value\030\005 \001"
    "(\001H\000\022\024\n\nbool_value\030\006 \001(\010H\000\022\023\n\tstr_value\030"
    "\007 \001(\tH\000\022&\n\tbool_list\030\010 \001(\0132\021.codegen.Boo"
    "lListH\000\022*\n\013scalar_list\030\t \001(\0132\023.codegen.S"
    "calarListH\000B\n\n\010arg_type\"\312\001\n\nOpOverload\022\014"
    "\n\004name\030\001 \001(\t\022\n\n\002op\030\002 \001(\t\022\016\n\006target\030\003 \001(\t"
    "\022\037\n\004args\030\004 \003(\0132\021.codegen.Argument\022/\n\006kwa"
    "rgs\030\005 \003(\0132\037.codegen.OpOverload.KwargsEnt"
    "ry\032@\n\013KwargsEntry\022\013\n\003key\030\001 \001(\t\022 \n\005value\030"
    "\002 \001(\0132\021.codegen.Argument:\0028\001\"D\n\016OpOverlo"
    "adList\022\014\n\004name\030\001 \001(\t\022$\n\007op_list\030\002 \003(\0132\023."
    "codegen.OpOverload\"\300\001\n\tOperation\022!\n\002op\030\002"
    " \001(\0132\023.codegen.OpOverloadH\000\022+\n\010fused_op\030"
    "\003 \001(\0132\027.codegen.OpOverloadListH\000\022!\n\006outp"
    "ut\030\004 \001(\0132\017.codegen.TensorH\001\022&\n\007outputs\030\005"
    " \001(\0132\023.codegen.TensorListH\001B\t\n\007op_typeB\r"
    "\n\013return_type\"n\n\005Model\022\037\n\006inputs\030\001 \003(\0132\017"
    ".codegen.Tensor\022#\n\nparameters\030\002 \003(\0132\017.co"
    "degen.Tensor\022\037\n\003ops\030\003 \003(\0132\022.codegen.Oper"
    "ationb\006proto3"
};
static ::absl::once_flag descriptor_table_param_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_param_2eproto = {
    false,
    false,
    1413,
    descriptor_table_protodef_param_2eproto,
    "param.proto",
    &descriptor_table_param_2eproto_once,
    nullptr,
    0,
    12,
    schemas,
    file_default_instances,
    TableStruct_param_2eproto::offsets,
    file_level_metadata_param_2eproto,
    file_level_enum_descriptors_param_2eproto,
    file_level_service_descriptors_param_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_param_2eproto_getter() {
  return &descriptor_table_param_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_param_2eproto(&descriptor_table_param_2eproto);
namespace codegen {
// ===================================================================

class Memory::_Internal {
 public:
};

Memory::Memory(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:codegen.Memory)
}
Memory::Memory(
    ::google::protobuf::Arena* arena, const Memory& from)
    : Memory(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Memory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Memory::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, address_),
           0,
           offsetof(Impl_, partition_) -
               offsetof(Impl_, address_) +
               sizeof(Impl_::partition_));
}
Memory::~Memory() {
  // @@protoc_insertion_point(destructor:codegen.Memory)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Memory::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Memory::Clear() {
// @@protoc_insertion_point(message_clear_start:codegen.Memory)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.address_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.partition_) -
      reinterpret_cast<char*>(&_impl_.address_)) + sizeof(_impl_.partition_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Memory::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Memory::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Memory_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint64 address = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Memory, _impl_.address_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Memory, _impl_.address_)}},
    // int32 partition = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Memory, _impl_.partition_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Memory, _impl_.partition_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 partition = 1;
    {PROTOBUF_FIELD_OFFSET(Memory, _impl_.partition_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // uint64 address = 2;
    {PROTOBUF_FIELD_OFFSET(Memory, _impl_.address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Memory::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:codegen.Memory)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 partition = 1;
  if (this->_internal_partition() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_partition(), target);
  }

  // uint64 address = 2;
  if (this->_internal_address() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_address(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:codegen.Memory)
  return target;
}

::size_t Memory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:codegen.Memory)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 address = 2;
  if (this->_internal_address() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_address());
  }

  // int32 partition = 1;
  if (this->_internal_partition() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_partition());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Memory::_class_data_ = {
    Memory::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Memory::GetClassData() const {
  return &_class_data_;
}

void Memory::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Memory*>(&to_msg);
  auto& from = static_cast<const Memory&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:codegen.Memory)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_address() != 0) {
    _this->_internal_set_address(from._internal_address());
  }
  if (from._internal_partition() != 0) {
    _this->_internal_set_partition(from._internal_partition());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Memory::CopyFrom(const Memory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:codegen.Memory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Memory::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Memory::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Memory::InternalSwap(Memory* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Memory, _impl_.partition_)
      + sizeof(Memory::_impl_.partition_)
      - PROTOBUF_FIELD_OFFSET(Memory, _impl_.address_)>(
          reinterpret_cast<char*>(&_impl_.address_),
          reinterpret_cast<char*>(&other->_impl_.address_));
}

::google::protobuf::Metadata Memory::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_param_2eproto_getter, &descriptor_table_param_2eproto_once,
      file_level_metadata_param_2eproto[0]);
}
// ===================================================================

class Tensor::_Internal {
 public:
  using HasBits = decltype(std::declval<Tensor>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Tensor, _impl_._has_bits_);
  static const ::codegen::Memory& memory(const Tensor* msg);
  static void set_has_memory(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::codegen::Memory& scratchpad(const Tensor* msg);
  static void set_has_scratchpad(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::codegen::OpOverload& dequant(const Tensor* msg);
  static void set_has_dequant(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::codegen::OpOverload& reshape(const Tensor* msg);
  static void set_has_reshape(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::codegen::Memory& Tensor::_Internal::memory(const Tensor* msg) {
  return *msg->_impl_.memory_;
}
const ::codegen::Memory& Tensor::_Internal::scratchpad(const Tensor* msg) {
  return *msg->_impl_.scratchpad_;
}
const ::codegen::OpOverload& Tensor::_Internal::dequant(const Tensor* msg) {
  return *msg->_impl_.dequant_;
}
const ::codegen::OpOverload& Tensor::_Internal::reshape(const Tensor* msg) {
  return *msg->_impl_.reshape_;
}
Tensor::Tensor(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:codegen.Tensor)
}
inline PROTOBUF_NDEBUG_INLINE Tensor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        shape_{visibility, arena, from.shape_},
        _shape_cached_byte_size_{0},
        tiled_shape_{visibility, arena, from.tiled_shape_},
        _tiled_shape_cached_byte_size_{0},
        node_(arena, from.node_),
        dtype_(arena, from.dtype_) {}

Tensor::Tensor(
    ::google::protobuf::Arena* arena,
    const Tensor& from)
    : ::google::protobuf::Message(arena) {
  Tensor* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.memory_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::codegen::Memory>(arena, *from._impl_.memory_)
                : nullptr;
  _impl_.scratchpad_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::codegen::Memory>(arena, *from._impl_.scratchpad_)
                : nullptr;
  _impl_.dequant_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::codegen::OpOverload>(arena, *from._impl_.dequant_)
                : nullptr;
  _impl_.reshape_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::codegen::OpOverload>(arena, *from._impl_.reshape_)
                : nullptr;
  _impl_.is_none_ = from._impl_.is_none_;

  // @@protoc_insertion_point(copy_constructor:codegen.Tensor)
}
inline PROTOBUF_NDEBUG_INLINE Tensor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        shape_{visibility, arena},
        _shape_cached_byte_size_{0},
        tiled_shape_{visibility, arena},
        _tiled_shape_cached_byte_size_{0},
        node_(arena),
        dtype_(arena) {}

inline void Tensor::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, memory_),
           0,
           offsetof(Impl_, is_none_) -
               offsetof(Impl_, memory_) +
               sizeof(Impl_::is_none_));
}
Tensor::~Tensor() {
  // @@protoc_insertion_point(destructor:codegen.Tensor)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Tensor::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.node_.Destroy();
  _impl_.dtype_.Destroy();
  delete _impl_.memory_;
  delete _impl_.scratchpad_;
  delete _impl_.dequant_;
  delete _impl_.reshape_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Tensor::Clear() {
// @@protoc_insertion_point(message_clear_start:codegen.Tensor)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.shape_.Clear();
  _impl_.tiled_shape_.Clear();
  _impl_.node_.ClearToEmpty();
  _impl_.dtype_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.memory_ != nullptr);
      _impl_.memory_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.scratchpad_ != nullptr);
      _impl_.scratchpad_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.dequant_ != nullptr);
      _impl_.dequant_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.reshape_ != nullptr);
      _impl_.reshape_->Clear();
    }
  }
  _impl_.is_none_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Tensor::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 4, 40, 2> Tensor::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Tensor, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Tensor_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string node = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Tensor, _impl_.node_)}},
    // repeated int32 shape = 2;
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Tensor, _impl_.shape_)}},
    // string dtype = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Tensor, _impl_.dtype_)}},
    // optional .codegen.Memory memory = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(Tensor, _impl_.memory_)}},
    // repeated int32 tiled_shape = 5;
    {::_pbi::TcParser::FastV32P1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Tensor, _impl_.tiled_shape_)}},
    // optional .codegen.Memory scratchpad = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 1, 1, PROTOBUF_FIELD_OFFSET(Tensor, _impl_.scratchpad_)}},
    // optional .codegen.OpOverload dequant = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 2, 2, PROTOBUF_FIELD_OFFSET(Tensor, _impl_.dequant_)}},
    // optional .codegen.OpOverload reshape = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 3, 3, PROTOBUF_FIELD_OFFSET(Tensor, _impl_.reshape_)}},
    // bool is_none = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Tensor, _impl_.is_none_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(Tensor, _impl_.is_none_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string node = 1;
    {PROTOBUF_FIELD_OFFSET(Tensor, _impl_.node_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated int32 shape = 2;
    {PROTOBUF_FIELD_OFFSET(Tensor, _impl_.shape_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // string dtype = 3;
    {PROTOBUF_FIELD_OFFSET(Tensor, _impl_.dtype_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional .codegen.Memory memory = 4;
    {PROTOBUF_FIELD_OFFSET(Tensor, _impl_.memory_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated int32 tiled_shape = 5;
    {PROTOBUF_FIELD_OFFSET(Tensor, _impl_.tiled_shape_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // optional .codegen.Memory scratchpad = 6;
    {PROTOBUF_FIELD_OFFSET(Tensor, _impl_.scratchpad_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .codegen.OpOverload dequant = 7;
    {PROTOBUF_FIELD_OFFSET(Tensor, _impl_.dequant_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .codegen.OpOverload reshape = 8;
    {PROTOBUF_FIELD_OFFSET(Tensor, _impl_.reshape_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool is_none = 9;
    {PROTOBUF_FIELD_OFFSET(Tensor, _impl_.is_none_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::codegen::Memory>()},
    {::_pbi::TcParser::GetTable<::codegen::Memory>()},
    {::_pbi::TcParser::GetTable<::codegen::OpOverload>()},
    {::_pbi::TcParser::GetTable<::codegen::OpOverload>()},
  }}, {{
    "\16\4\0\5\0\0\0\0\0\0\0\0\0\0\0\0"
    "codegen.Tensor"
    "node"
    "dtype"
  }},
};

::uint8_t* Tensor::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:codegen.Tensor)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string node = 1;
  if (!this->_internal_node().empty()) {
    const std::string& _s = this->_internal_node();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "codegen.Tensor.node");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated int32 shape = 2;
  {
    int byte_size = _impl_._shape_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_shape(), byte_size, target);
    }
  }

  // string dtype = 3;
  if (!this->_internal_dtype().empty()) {
    const std::string& _s = this->_internal_dtype();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "codegen.Tensor.dtype");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .codegen.Memory memory = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::memory(this),
        _Internal::memory(this).GetCachedSize(), target, stream);
  }

  // repeated int32 tiled_shape = 5;
  {
    int byte_size = _impl_._tiled_shape_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          5, _internal_tiled_shape(), byte_size, target);
    }
  }

  // optional .codegen.Memory scratchpad = 6;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, _Internal::scratchpad(this),
        _Internal::scratchpad(this).GetCachedSize(), target, stream);
  }

  // optional .codegen.OpOverload dequant = 7;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, _Internal::dequant(this),
        _Internal::dequant(this).GetCachedSize(), target, stream);
  }

  // optional .codegen.OpOverload reshape = 8;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, _Internal::reshape(this),
        _Internal::reshape(this).GetCachedSize(), target, stream);
  }

  // bool is_none = 9;
  if (this->_internal_is_none() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        9, this->_internal_is_none(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:codegen.Tensor)
  return target;
}

::size_t Tensor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:codegen.Tensor)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 shape = 2;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_shape())
    ;
    _impl_._shape_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated int32 tiled_shape = 5;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_tiled_shape())
    ;
    _impl_._tiled_shape_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // string node = 1;
  if (!this->_internal_node().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_node());
  }

  // string dtype = 3;
  if (!this->_internal_dtype().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_dtype());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional .codegen.Memory memory = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.memory_);
    }

    // optional .codegen.Memory scratchpad = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.scratchpad_);
    }

    // optional .codegen.OpOverload dequant = 7;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.dequant_);
    }

    // optional .codegen.OpOverload reshape = 8;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.reshape_);
    }

  }
  // bool is_none = 9;
  if (this->_internal_is_none() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Tensor::_class_data_ = {
    Tensor::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Tensor::GetClassData() const {
  return &_class_data_;
}

void Tensor::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Tensor*>(&to_msg);
  auto& from = static_cast<const Tensor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:codegen.Tensor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_shape()->MergeFrom(from._internal_shape());
  _this->_internal_mutable_tiled_shape()->MergeFrom(from._internal_tiled_shape());
  if (!from._internal_node().empty()) {
    _this->_internal_set_node(from._internal_node());
  }
  if (!from._internal_dtype().empty()) {
    _this->_internal_set_dtype(from._internal_dtype());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_memory()->::codegen::Memory::MergeFrom(
          from._internal_memory());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_scratchpad()->::codegen::Memory::MergeFrom(
          from._internal_scratchpad());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_dequant()->::codegen::OpOverload::MergeFrom(
          from._internal_dequant());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_reshape()->::codegen::OpOverload::MergeFrom(
          from._internal_reshape());
    }
  }
  if (from._internal_is_none() != 0) {
    _this->_internal_set_is_none(from._internal_is_none());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Tensor::CopyFrom(const Tensor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:codegen.Tensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Tensor::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Tensor::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Tensor::InternalSwap(Tensor* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.shape_.InternalSwap(&other->_impl_.shape_);
  _impl_.tiled_shape_.InternalSwap(&other->_impl_.tiled_shape_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.node_, &other->_impl_.node_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dtype_, &other->_impl_.dtype_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Tensor, _impl_.is_none_)
      + sizeof(Tensor::_impl_.is_none_)
      - PROTOBUF_FIELD_OFFSET(Tensor, _impl_.memory_)>(
          reinterpret_cast<char*>(&_impl_.memory_),
          reinterpret_cast<char*>(&other->_impl_.memory_));
}

::google::protobuf::Metadata Tensor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_param_2eproto_getter, &descriptor_table_param_2eproto_once,
      file_level_metadata_param_2eproto[1]);
}
// ===================================================================

class TensorList::_Internal {
 public:
};

TensorList::TensorList(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:codegen.TensorList)
}
inline PROTOBUF_NDEBUG_INLINE TensorList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : tensors_{visibility, arena, from.tensors_},
        _cached_size_{0} {}

TensorList::TensorList(
    ::google::protobuf::Arena* arena,
    const TensorList& from)
    : ::google::protobuf::Message(arena) {
  TensorList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:codegen.TensorList)
}
inline PROTOBUF_NDEBUG_INLINE TensorList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : tensors_{visibility, arena},
        _cached_size_{0} {}

inline void TensorList::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TensorList::~TensorList() {
  // @@protoc_insertion_point(destructor:codegen.TensorList)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TensorList::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TensorList::Clear() {
// @@protoc_insertion_point(message_clear_start:codegen.TensorList)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tensors_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TensorList::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> TensorList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TensorList_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .codegen.Tensor tensors = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TensorList, _impl_.tensors_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .codegen.Tensor tensors = 1;
    {PROTOBUF_FIELD_OFFSET(TensorList, _impl_.tensors_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::codegen::Tensor>()},
  }}, {{
  }},
};

::uint8_t* TensorList::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:codegen.TensorList)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .codegen.Tensor tensors = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_tensors_size()); i < n; i++) {
    const auto& repfield = this->_internal_tensors().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:codegen.TensorList)
  return target;
}

::size_t TensorList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:codegen.TensorList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .codegen.Tensor tensors = 1;
  total_size += 1UL * this->_internal_tensors_size();
  for (const auto& msg : this->_internal_tensors()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TensorList::_class_data_ = {
    TensorList::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TensorList::GetClassData() const {
  return &_class_data_;
}

void TensorList::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TensorList*>(&to_msg);
  auto& from = static_cast<const TensorList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:codegen.TensorList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tensors()->MergeFrom(
      from._internal_tensors());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TensorList::CopyFrom(const TensorList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:codegen.TensorList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TensorList::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TensorList::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TensorList::InternalSwap(TensorList* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tensors_.InternalSwap(&other->_impl_.tensors_);
}

::google::protobuf::Metadata TensorList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_param_2eproto_getter, &descriptor_table_param_2eproto_once,
      file_level_metadata_param_2eproto[2]);
}
// ===================================================================

class IntList::_Internal {
 public:
};

IntList::IntList(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:codegen.IntList)
}
inline PROTOBUF_NDEBUG_INLINE IntList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : values_{visibility, arena, from.values_},
        _values_cached_byte_size_{0},
        _cached_size_{0} {}

IntList::IntList(
    ::google::protobuf::Arena* arena,
    const IntList& from)
    : ::google::protobuf::Message(arena) {
  IntList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:codegen.IntList)
}
inline PROTOBUF_NDEBUG_INLINE IntList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : values_{visibility, arena},
        _values_cached_byte_size_{0},
        _cached_size_{0} {}

inline void IntList::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
IntList::~IntList() {
  // @@protoc_insertion_point(destructor:codegen.IntList)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void IntList::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void IntList::Clear() {
// @@protoc_insertion_point(message_clear_start:codegen.IntList)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.values_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* IntList::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> IntList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_IntList_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated int64 values = 1;
    {::_pbi::TcParser::FastV64P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(IntList, _impl_.values_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated int64 values = 1;
    {PROTOBUF_FIELD_OFFSET(IntList, _impl_.values_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* IntList::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:codegen.IntList)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated int64 values = 1;
  {
    int byte_size = _impl_._values_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          1, _internal_values(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:codegen.IntList)
  return target;
}

::size_t IntList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:codegen.IntList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 values = 1;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int64Size(
        this->_internal_values())
    ;
    _impl_._values_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData IntList::_class_data_ = {
    IntList::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* IntList::GetClassData() const {
  return &_class_data_;
}

void IntList::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<IntList*>(&to_msg);
  auto& from = static_cast<const IntList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:codegen.IntList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_values()->MergeFrom(from._internal_values());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IntList::CopyFrom(const IntList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:codegen.IntList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool IntList::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* IntList::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void IntList::InternalSwap(IntList* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.values_.InternalSwap(&other->_impl_.values_);
}

::google::protobuf::Metadata IntList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_param_2eproto_getter, &descriptor_table_param_2eproto_once,
      file_level_metadata_param_2eproto[3]);
}
// ===================================================================

class BoolList::_Internal {
 public:
};

BoolList::BoolList(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:codegen.BoolList)
}
inline PROTOBUF_NDEBUG_INLINE BoolList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : values_{visibility, arena, from.values_},
        _cached_size_{0} {}

BoolList::BoolList(
    ::google::protobuf::Arena* arena,
    const BoolList& from)
    : ::google::protobuf::Message(arena) {
  BoolList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:codegen.BoolList)
}
inline PROTOBUF_NDEBUG_INLINE BoolList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : values_{visibility, arena},
        _cached_size_{0} {}

inline void BoolList::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BoolList::~BoolList() {
  // @@protoc_insertion_point(destructor:codegen.BoolList)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BoolList::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void BoolList::Clear() {
// @@protoc_insertion_point(message_clear_start:codegen.BoolList)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.values_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BoolList::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> BoolList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_BoolList_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated bool values = 1;
    {::_pbi::TcParser::FastV8P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BoolList, _impl_.values_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated bool values = 1;
    {PROTOBUF_FIELD_OFFSET(BoolList, _impl_.values_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* BoolList::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:codegen.BoolList)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated bool values = 1;
  if (this->_internal_values_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_values(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:codegen.BoolList)
  return target;
}

::size_t BoolList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:codegen.BoolList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bool values = 1;
  {
    std::size_t data_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_values_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BoolList::_class_data_ = {
    BoolList::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* BoolList::GetClassData() const {
  return &_class_data_;
}

void BoolList::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BoolList*>(&to_msg);
  auto& from = static_cast<const BoolList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:codegen.BoolList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_values()->MergeFrom(from._internal_values());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BoolList::CopyFrom(const BoolList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:codegen.BoolList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BoolList::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* BoolList::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void BoolList::InternalSwap(BoolList* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.values_.InternalSwap(&other->_impl_.values_);
}

::google::protobuf::Metadata BoolList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_param_2eproto_getter, &descriptor_table_param_2eproto_once,
      file_level_metadata_param_2eproto[4]);
}
// ===================================================================

class ScalarList::_Internal {
 public:
};

ScalarList::ScalarList(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:codegen.ScalarList)
}
inline PROTOBUF_NDEBUG_INLINE ScalarList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : values_{visibility, arena, from.values_},
        _cached_size_{0} {}

ScalarList::ScalarList(
    ::google::protobuf::Arena* arena,
    const ScalarList& from)
    : ::google::protobuf::Message(arena) {
  ScalarList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:codegen.ScalarList)
}
inline PROTOBUF_NDEBUG_INLINE ScalarList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : values_{visibility, arena},
        _cached_size_{0} {}

inline void ScalarList::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ScalarList::~ScalarList() {
  // @@protoc_insertion_point(destructor:codegen.ScalarList)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ScalarList::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ScalarList::Clear() {
// @@protoc_insertion_point(message_clear_start:codegen.ScalarList)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.values_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ScalarList::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ScalarList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ScalarList_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated double values = 1;
    {::_pbi::TcParser::FastF64P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ScalarList, _impl_.values_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated double values = 1;
    {PROTOBUF_FIELD_OFFSET(ScalarList, _impl_.values_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ScalarList::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:codegen.ScalarList)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated double values = 1;
  if (this->_internal_values_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_values(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:codegen.ScalarList)
  return target;
}

::size_t ScalarList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:codegen.ScalarList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated double values = 1;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_values_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ScalarList::_class_data_ = {
    ScalarList::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ScalarList::GetClassData() const {
  return &_class_data_;
}

void ScalarList::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ScalarList*>(&to_msg);
  auto& from = static_cast<const ScalarList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:codegen.ScalarList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_values()->MergeFrom(from._internal_values());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ScalarList::CopyFrom(const ScalarList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:codegen.ScalarList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ScalarList::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ScalarList::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ScalarList::InternalSwap(ScalarList* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.values_.InternalSwap(&other->_impl_.values_);
}

::google::protobuf::Metadata ScalarList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_param_2eproto_getter, &descriptor_table_param_2eproto_once,
      file_level_metadata_param_2eproto[5]);
}
// ===================================================================

class Argument::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::codegen::Argument, _impl_._oneof_case_);
  static const ::codegen::Tensor& tensor(const Argument* msg);
  static const ::codegen::TensorList& tensor_list(const Argument* msg);
  static const ::codegen::IntList& int_list(const Argument* msg);
  static const ::codegen::BoolList& bool_list(const Argument* msg);
  static const ::codegen::ScalarList& scalar_list(const Argument* msg);
};

const ::codegen::Tensor& Argument::_Internal::tensor(const Argument* msg) {
  return *msg->_impl_.arg_type_.tensor_;
}
const ::codegen::TensorList& Argument::_Internal::tensor_list(const Argument* msg) {
  return *msg->_impl_.arg_type_.tensor_list_;
}
const ::codegen::IntList& Argument::_Internal::int_list(const Argument* msg) {
  return *msg->_impl_.arg_type_.int_list_;
}
const ::codegen::BoolList& Argument::_Internal::bool_list(const Argument* msg) {
  return *msg->_impl_.arg_type_.bool_list_;
}
const ::codegen::ScalarList& Argument::_Internal::scalar_list(const Argument* msg) {
  return *msg->_impl_.arg_type_.scalar_list_;
}
void Argument::set_allocated_tensor(::codegen::Tensor* tensor) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_arg_type();
  if (tensor) {
    ::google::protobuf::Arena* submessage_arena = tensor->GetArena();
    if (message_arena != submessage_arena) {
      tensor = ::google::protobuf::internal::GetOwnedMessage(message_arena, tensor, submessage_arena);
    }
    set_has_tensor();
    _impl_.arg_type_.tensor_ = tensor;
  }
  // @@protoc_insertion_point(field_set_allocated:codegen.Argument.tensor)
}
void Argument::set_allocated_tensor_list(::codegen::TensorList* tensor_list) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_arg_type();
  if (tensor_list) {
    ::google::protobuf::Arena* submessage_arena = tensor_list->GetArena();
    if (message_arena != submessage_arena) {
      tensor_list = ::google::protobuf::internal::GetOwnedMessage(message_arena, tensor_list, submessage_arena);
    }
    set_has_tensor_list();
    _impl_.arg_type_.tensor_list_ = tensor_list;
  }
  // @@protoc_insertion_point(field_set_allocated:codegen.Argument.tensor_list)
}
void Argument::set_allocated_int_list(::codegen::IntList* int_list) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_arg_type();
  if (int_list) {
    ::google::protobuf::Arena* submessage_arena = int_list->GetArena();
    if (message_arena != submessage_arena) {
      int_list = ::google::protobuf::internal::GetOwnedMessage(message_arena, int_list, submessage_arena);
    }
    set_has_int_list();
    _impl_.arg_type_.int_list_ = int_list;
  }
  // @@protoc_insertion_point(field_set_allocated:codegen.Argument.int_list)
}
void Argument::set_allocated_bool_list(::codegen::BoolList* bool_list) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_arg_type();
  if (bool_list) {
    ::google::protobuf::Arena* submessage_arena = bool_list->GetArena();
    if (message_arena != submessage_arena) {
      bool_list = ::google::protobuf::internal::GetOwnedMessage(message_arena, bool_list, submessage_arena);
    }
    set_has_bool_list();
    _impl_.arg_type_.bool_list_ = bool_list;
  }
  // @@protoc_insertion_point(field_set_allocated:codegen.Argument.bool_list)
}
void Argument::set_allocated_scalar_list(::codegen::ScalarList* scalar_list) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_arg_type();
  if (scalar_list) {
    ::google::protobuf::Arena* submessage_arena = scalar_list->GetArena();
    if (message_arena != submessage_arena) {
      scalar_list = ::google::protobuf::internal::GetOwnedMessage(message_arena, scalar_list, submessage_arena);
    }
    set_has_scalar_list();
    _impl_.arg_type_.scalar_list_ = scalar_list;
  }
  // @@protoc_insertion_point(field_set_allocated:codegen.Argument.scalar_list)
}
Argument::Argument(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:codegen.Argument)
}
inline PROTOBUF_NDEBUG_INLINE Argument::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : arg_type_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Argument::Argument(
    ::google::protobuf::Arena* arena,
    const Argument& from)
    : ::google::protobuf::Message(arena) {
  Argument* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (arg_type_case()) {
    case ARG_TYPE_NOT_SET:
      break;
      case kTensor:
        _impl_.arg_type_.tensor_ = CreateMaybeMessage<::codegen::Tensor>(arena, *from._impl_.arg_type_.tensor_);
        break;
      case kTensorList:
        _impl_.arg_type_.tensor_list_ = CreateMaybeMessage<::codegen::TensorList>(arena, *from._impl_.arg_type_.tensor_list_);
        break;
      case kIntList:
        _impl_.arg_type_.int_list_ = CreateMaybeMessage<::codegen::IntList>(arena, *from._impl_.arg_type_.int_list_);
        break;
      case kIntValue:
        _impl_.arg_type_.int_value_ = from._impl_.arg_type_.int_value_;
        break;
      case kFloatValue:
        _impl_.arg_type_.float_value_ = from._impl_.arg_type_.float_value_;
        break;
      case kBoolValue:
        _impl_.arg_type_.bool_value_ = from._impl_.arg_type_.bool_value_;
        break;
      case kStrValue:
        new (&_impl_.arg_type_.str_value_) decltype(_impl_.arg_type_.str_value_){arena, from._impl_.arg_type_.str_value_};
        break;
      case kBoolList:
        _impl_.arg_type_.bool_list_ = CreateMaybeMessage<::codegen::BoolList>(arena, *from._impl_.arg_type_.bool_list_);
        break;
      case kScalarList:
        _impl_.arg_type_.scalar_list_ = CreateMaybeMessage<::codegen::ScalarList>(arena, *from._impl_.arg_type_.scalar_list_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:codegen.Argument)
}
inline PROTOBUF_NDEBUG_INLINE Argument::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : arg_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Argument::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Argument::~Argument() {
  // @@protoc_insertion_point(destructor:codegen.Argument)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Argument::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_arg_type()) {
    clear_arg_type();
  }
  _impl_.~Impl_();
}

void Argument::clear_arg_type() {
// @@protoc_insertion_point(one_of_clear_start:codegen.Argument)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (arg_type_case()) {
    case kTensor: {
      if (GetArena() == nullptr) {
        delete _impl_.arg_type_.tensor_;
      }
      break;
    }
    case kTensorList: {
      if (GetArena() == nullptr) {
        delete _impl_.arg_type_.tensor_list_;
      }
      break;
    }
    case kIntList: {
      if (GetArena() == nullptr) {
        delete _impl_.arg_type_.int_list_;
      }
      break;
    }
    case kIntValue: {
      // No need to clear
      break;
    }
    case kFloatValue: {
      // No need to clear
      break;
    }
    case kBoolValue: {
      // No need to clear
      break;
    }
    case kStrValue: {
      _impl_.arg_type_.str_value_.Destroy();
      break;
    }
    case kBoolList: {
      if (GetArena() == nullptr) {
        delete _impl_.arg_type_.bool_list_;
      }
      break;
    }
    case kScalarList: {
      if (GetArena() == nullptr) {
        delete _impl_.arg_type_.scalar_list_;
      }
      break;
    }
    case ARG_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = ARG_TYPE_NOT_SET;
}


PROTOBUF_NOINLINE void Argument::Clear() {
// @@protoc_insertion_point(message_clear_start:codegen.Argument)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_arg_type();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Argument::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 9, 5, 42, 2> Argument::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Argument_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .codegen.Tensor tensor = 1;
    {PROTOBUF_FIELD_OFFSET(Argument, _impl_.arg_type_.tensor_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .codegen.TensorList tensor_list = 2;
    {PROTOBUF_FIELD_OFFSET(Argument, _impl_.arg_type_.tensor_list_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .codegen.IntList int_list = 3;
    {PROTOBUF_FIELD_OFFSET(Argument, _impl_.arg_type_.int_list_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 int_value = 4;
    {PROTOBUF_FIELD_OFFSET(Argument, _impl_.arg_type_.int_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kInt64)},
    // double float_value = 5;
    {PROTOBUF_FIELD_OFFSET(Argument, _impl_.arg_type_.float_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kDouble)},
    // bool bool_value = 6;
    {PROTOBUF_FIELD_OFFSET(Argument, _impl_.arg_type_.bool_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBool)},
    // string str_value = 7;
    {PROTOBUF_FIELD_OFFSET(Argument, _impl_.arg_type_.str_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .codegen.BoolList bool_list = 8;
    {PROTOBUF_FIELD_OFFSET(Argument, _impl_.arg_type_.bool_list_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .codegen.ScalarList scalar_list = 9;
    {PROTOBUF_FIELD_OFFSET(Argument, _impl_.arg_type_.scalar_list_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::codegen::Tensor>()},
    {::_pbi::TcParser::GetTable<::codegen::TensorList>()},
    {::_pbi::TcParser::GetTable<::codegen::IntList>()},
    {::_pbi::TcParser::GetTable<::codegen::BoolList>()},
    {::_pbi::TcParser::GetTable<::codegen::ScalarList>()},
  }}, {{
    "\20\0\0\0\0\0\0\11\0\0\0\0\0\0\0\0"
    "codegen.Argument"
    "str_value"
  }},
};

::uint8_t* Argument::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:codegen.Argument)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (arg_type_case()) {
    case kTensor: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::tensor(this),
          _Internal::tensor(this).GetCachedSize(), target, stream);
      break;
    }
    case kTensorList: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::tensor_list(this),
          _Internal::tensor_list(this).GetCachedSize(), target, stream);
      break;
    }
    case kIntList: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::int_list(this),
          _Internal::int_list(this).GetCachedSize(), target, stream);
      break;
    }
    case kIntValue: {
      target = ::google::protobuf::internal::WireFormatLite::
          WriteInt64ToArrayWithField<4>(
              stream, this->_internal_int_value(), target);
      break;
    }
    case kFloatValue: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          5, this->_internal_float_value(), target);
      break;
    }
    case kBoolValue: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          6, this->_internal_bool_value(), target);
      break;
    }
    case kStrValue: {
      const std::string& _s = this->_internal_str_value();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "codegen.Argument.str_value");
      target = stream->WriteStringMaybeAliased(7, _s, target);
      break;
    }
    case kBoolList: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          8, _Internal::bool_list(this),
          _Internal::bool_list(this).GetCachedSize(), target, stream);
      break;
    }
    case kScalarList: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          9, _Internal::scalar_list(this),
          _Internal::scalar_list(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:codegen.Argument)
  return target;
}

::size_t Argument::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:codegen.Argument)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (arg_type_case()) {
    // .codegen.Tensor tensor = 1;
    case kTensor: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.arg_type_.tensor_);
      break;
    }
    // .codegen.TensorList tensor_list = 2;
    case kTensorList: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.arg_type_.tensor_list_);
      break;
    }
    // .codegen.IntList int_list = 3;
    case kIntList: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.arg_type_.int_list_);
      break;
    }
    // int64 int_value = 4;
    case kIntValue: {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_int_value());
      break;
    }
    // double float_value = 5;
    case kFloatValue: {
      total_size += 9;
      break;
    }
    // bool bool_value = 6;
    case kBoolValue: {
      total_size += 2;
      break;
    }
    // string str_value = 7;
    case kStrValue: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_str_value());
      break;
    }
    // .codegen.BoolList bool_list = 8;
    case kBoolList: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.arg_type_.bool_list_);
      break;
    }
    // .codegen.ScalarList scalar_list = 9;
    case kScalarList: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.arg_type_.scalar_list_);
      break;
    }
    case ARG_TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Argument::_class_data_ = {
    Argument::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Argument::GetClassData() const {
  return &_class_data_;
}

void Argument::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Argument*>(&to_msg);
  auto& from = static_cast<const Argument&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:codegen.Argument)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.arg_type_case()) {
    case kTensor: {
      _this->_internal_mutable_tensor()->::codegen::Tensor::MergeFrom(
          from._internal_tensor());
      break;
    }
    case kTensorList: {
      _this->_internal_mutable_tensor_list()->::codegen::TensorList::MergeFrom(
          from._internal_tensor_list());
      break;
    }
    case kIntList: {
      _this->_internal_mutable_int_list()->::codegen::IntList::MergeFrom(
          from._internal_int_list());
      break;
    }
    case kIntValue: {
      _this->_internal_set_int_value(from._internal_int_value());
      break;
    }
    case kFloatValue: {
      _this->_internal_set_float_value(from._internal_float_value());
      break;
    }
    case kBoolValue: {
      _this->_internal_set_bool_value(from._internal_bool_value());
      break;
    }
    case kStrValue: {
      _this->_internal_set_str_value(from._internal_str_value());
      break;
    }
    case kBoolList: {
      _this->_internal_mutable_bool_list()->::codegen::BoolList::MergeFrom(
          from._internal_bool_list());
      break;
    }
    case kScalarList: {
      _this->_internal_mutable_scalar_list()->::codegen::ScalarList::MergeFrom(
          from._internal_scalar_list());
      break;
    }
    case ARG_TYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Argument::CopyFrom(const Argument& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:codegen.Argument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Argument::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Argument::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Argument::InternalSwap(Argument* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.arg_type_, other->_impl_.arg_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Argument::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_param_2eproto_getter, &descriptor_table_param_2eproto_once,
      file_level_metadata_param_2eproto[6]);
}
// ===================================================================

OpOverload_KwargsEntry_DoNotUse::OpOverload_KwargsEntry_DoNotUse() {}
OpOverload_KwargsEntry_DoNotUse::OpOverload_KwargsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata OpOverload_KwargsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_param_2eproto_getter, &descriptor_table_param_2eproto_once,
      file_level_metadata_param_2eproto[7]);
}
// ===================================================================

class OpOverload::_Internal {
 public:
};

OpOverload::OpOverload(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:codegen.OpOverload)
}
inline PROTOBUF_NDEBUG_INLINE OpOverload::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : args_{visibility, arena, from.args_},
        kwargs_{visibility, arena, from.kwargs_},
        name_(arena, from.name_),
        op_(arena, from.op_),
        target_(arena, from.target_),
        _cached_size_{0} {}

OpOverload::OpOverload(
    ::google::protobuf::Arena* arena,
    const OpOverload& from)
    : ::google::protobuf::Message(arena) {
  OpOverload* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:codegen.OpOverload)
}
inline PROTOBUF_NDEBUG_INLINE OpOverload::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : args_{visibility, arena},
        kwargs_{visibility, arena},
        name_(arena),
        op_(arena),
        target_(arena),
        _cached_size_{0} {}

inline void OpOverload::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
OpOverload::~OpOverload() {
  // @@protoc_insertion_point(destructor:codegen.OpOverload)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OpOverload::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.op_.Destroy();
  _impl_.target_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void OpOverload::Clear() {
// @@protoc_insertion_point(message_clear_start:codegen.OpOverload)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.args_.Clear();
  _impl_.kwargs_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.op_.ClearToEmpty();
  _impl_.target_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OpOverload::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 3, 45, 2> OpOverload::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_OpOverload_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .codegen.Argument args = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(OpOverload, _impl_.args_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OpOverload, _impl_.name_)}},
    // string op = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(OpOverload, _impl_.op_)}},
    // string target = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(OpOverload, _impl_.target_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(OpOverload, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string op = 2;
    {PROTOBUF_FIELD_OFFSET(OpOverload, _impl_.op_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string target = 3;
    {PROTOBUF_FIELD_OFFSET(OpOverload, _impl_.target_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .codegen.Argument args = 4;
    {PROTOBUF_FIELD_OFFSET(OpOverload, _impl_.args_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, .codegen.Argument> kwargs = 5;
    {PROTOBUF_FIELD_OFFSET(OpOverload, _impl_.kwargs_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetTable<::codegen::Argument>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(OpOverload()._impl_.kwargs_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::CreateInArenaStorageCb<::codegen::Argument>},
  }}, {{
    "\22\4\2\6\0\6\0\0"
    "codegen.OpOverload"
    "name"
    "op"
    "target"
    "kwargs"
  }},
};

::uint8_t* OpOverload::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:codegen.OpOverload)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "codegen.OpOverload.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string op = 2;
  if (!this->_internal_op().empty()) {
    const std::string& _s = this->_internal_op();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "codegen.OpOverload.op");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string target = 3;
  if (!this->_internal_target().empty()) {
    const std::string& _s = this->_internal_target();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "codegen.OpOverload.target");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // repeated .codegen.Argument args = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_args_size()); i < n; i++) {
    const auto& repfield = this->_internal_args().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // map<string, .codegen.Argument> kwargs = 5;
  if (!_internal_kwargs().empty()) {
    using MapType = ::google::protobuf::Map<std::string, ::codegen::Argument>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, ::codegen::Argument,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>;
    const auto& field = _internal_kwargs();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "codegen.OpOverload.kwargs");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "codegen.OpOverload.kwargs");
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:codegen.OpOverload)
  return target;
}

::size_t OpOverload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:codegen.OpOverload)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .codegen.Argument args = 4;
  total_size += 1UL * this->_internal_args_size();
  for (const auto& msg : this->_internal_args()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // map<string, .codegen.Argument> kwargs = 5;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_kwargs_size());
  for (const auto& entry : _internal_kwargs()) {
    total_size += _pbi::MapEntryFuncs<std::string, ::codegen::Argument,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
  }
  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string op = 2;
  if (!this->_internal_op().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_op());
  }

  // string target = 3;
  if (!this->_internal_target().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_target());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OpOverload::_class_data_ = {
    OpOverload::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* OpOverload::GetClassData() const {
  return &_class_data_;
}

void OpOverload::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OpOverload*>(&to_msg);
  auto& from = static_cast<const OpOverload&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:codegen.OpOverload)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_args()->MergeFrom(
      from._internal_args());
  _this->_impl_.kwargs_.MergeFrom(from._impl_.kwargs_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_op().empty()) {
    _this->_internal_set_op(from._internal_op());
  }
  if (!from._internal_target().empty()) {
    _this->_internal_set_target(from._internal_target());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OpOverload::CopyFrom(const OpOverload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:codegen.OpOverload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OpOverload::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* OpOverload::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void OpOverload::InternalSwap(OpOverload* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.args_.InternalSwap(&other->_impl_.args_);
  _impl_.kwargs_.InternalSwap(&other->_impl_.kwargs_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.op_, &other->_impl_.op_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_, &other->_impl_.target_, arena);
}

::google::protobuf::Metadata OpOverload::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_param_2eproto_getter, &descriptor_table_param_2eproto_once,
      file_level_metadata_param_2eproto[8]);
}
// ===================================================================

class OpOverloadList::_Internal {
 public:
};

OpOverloadList::OpOverloadList(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:codegen.OpOverloadList)
}
inline PROTOBUF_NDEBUG_INLINE OpOverloadList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : op_list_{visibility, arena, from.op_list_},
        name_(arena, from.name_),
        _cached_size_{0} {}

OpOverloadList::OpOverloadList(
    ::google::protobuf::Arena* arena,
    const OpOverloadList& from)
    : ::google::protobuf::Message(arena) {
  OpOverloadList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:codegen.OpOverloadList)
}
inline PROTOBUF_NDEBUG_INLINE OpOverloadList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : op_list_{visibility, arena},
        name_(arena),
        _cached_size_{0} {}

inline void OpOverloadList::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
OpOverloadList::~OpOverloadList() {
  // @@protoc_insertion_point(destructor:codegen.OpOverloadList)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OpOverloadList::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void OpOverloadList::Clear() {
// @@protoc_insertion_point(message_clear_start:codegen.OpOverloadList)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.op_list_.Clear();
  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OpOverloadList::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 35, 2> OpOverloadList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_OpOverloadList_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .codegen.OpOverload op_list = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(OpOverloadList, _impl_.op_list_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OpOverloadList, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(OpOverloadList, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .codegen.OpOverload op_list = 2;
    {PROTOBUF_FIELD_OFFSET(OpOverloadList, _impl_.op_list_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::codegen::OpOverload>()},
  }}, {{
    "\26\4\0\0\0\0\0\0"
    "codegen.OpOverloadList"
    "name"
  }},
};

::uint8_t* OpOverloadList::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:codegen.OpOverloadList)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "codegen.OpOverloadList.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .codegen.OpOverload op_list = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_op_list_size()); i < n; i++) {
    const auto& repfield = this->_internal_op_list().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:codegen.OpOverloadList)
  return target;
}

::size_t OpOverloadList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:codegen.OpOverloadList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .codegen.OpOverload op_list = 2;
  total_size += 1UL * this->_internal_op_list_size();
  for (const auto& msg : this->_internal_op_list()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OpOverloadList::_class_data_ = {
    OpOverloadList::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* OpOverloadList::GetClassData() const {
  return &_class_data_;
}

void OpOverloadList::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OpOverloadList*>(&to_msg);
  auto& from = static_cast<const OpOverloadList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:codegen.OpOverloadList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_op_list()->MergeFrom(
      from._internal_op_list());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OpOverloadList::CopyFrom(const OpOverloadList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:codegen.OpOverloadList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OpOverloadList::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* OpOverloadList::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void OpOverloadList::InternalSwap(OpOverloadList* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.op_list_.InternalSwap(&other->_impl_.op_list_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf::Metadata OpOverloadList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_param_2eproto_getter, &descriptor_table_param_2eproto_once,
      file_level_metadata_param_2eproto[9]);
}
// ===================================================================

class Operation::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::codegen::Operation, _impl_._oneof_case_);
  static const ::codegen::OpOverload& op(const Operation* msg);
  static const ::codegen::OpOverloadList& fused_op(const Operation* msg);
  static const ::codegen::Tensor& output(const Operation* msg);
  static const ::codegen::TensorList& outputs(const Operation* msg);
};

const ::codegen::OpOverload& Operation::_Internal::op(const Operation* msg) {
  return *msg->_impl_.op_type_.op_;
}
const ::codegen::OpOverloadList& Operation::_Internal::fused_op(const Operation* msg) {
  return *msg->_impl_.op_type_.fused_op_;
}
const ::codegen::Tensor& Operation::_Internal::output(const Operation* msg) {
  return *msg->_impl_.return_type_.output_;
}
const ::codegen::TensorList& Operation::_Internal::outputs(const Operation* msg) {
  return *msg->_impl_.return_type_.outputs_;
}
void Operation::set_allocated_op(::codegen::OpOverload* op) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_op_type();
  if (op) {
    ::google::protobuf::Arena* submessage_arena = op->GetArena();
    if (message_arena != submessage_arena) {
      op = ::google::protobuf::internal::GetOwnedMessage(message_arena, op, submessage_arena);
    }
    set_has_op();
    _impl_.op_type_.op_ = op;
  }
  // @@protoc_insertion_point(field_set_allocated:codegen.Operation.op)
}
void Operation::set_allocated_fused_op(::codegen::OpOverloadList* fused_op) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_op_type();
  if (fused_op) {
    ::google::protobuf::Arena* submessage_arena = fused_op->GetArena();
    if (message_arena != submessage_arena) {
      fused_op = ::google::protobuf::internal::GetOwnedMessage(message_arena, fused_op, submessage_arena);
    }
    set_has_fused_op();
    _impl_.op_type_.fused_op_ = fused_op;
  }
  // @@protoc_insertion_point(field_set_allocated:codegen.Operation.fused_op)
}
void Operation::set_allocated_output(::codegen::Tensor* output) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_return_type();
  if (output) {
    ::google::protobuf::Arena* submessage_arena = output->GetArena();
    if (message_arena != submessage_arena) {
      output = ::google::protobuf::internal::GetOwnedMessage(message_arena, output, submessage_arena);
    }
    set_has_output();
    _impl_.return_type_.output_ = output;
  }
  // @@protoc_insertion_point(field_set_allocated:codegen.Operation.output)
}
void Operation::set_allocated_outputs(::codegen::TensorList* outputs) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_return_type();
  if (outputs) {
    ::google::protobuf::Arena* submessage_arena = outputs->GetArena();
    if (message_arena != submessage_arena) {
      outputs = ::google::protobuf::internal::GetOwnedMessage(message_arena, outputs, submessage_arena);
    }
    set_has_outputs();
    _impl_.return_type_.outputs_ = outputs;
  }
  // @@protoc_insertion_point(field_set_allocated:codegen.Operation.outputs)
}
Operation::Operation(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:codegen.Operation)
}
inline PROTOBUF_NDEBUG_INLINE Operation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : op_type_{},
        return_type_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0], from._oneof_case_[1]} {}

Operation::Operation(
    ::google::protobuf::Arena* arena,
    const Operation& from)
    : ::google::protobuf::Message(arena) {
  Operation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (op_type_case()) {
    case OP_TYPE_NOT_SET:
      break;
      case kOp:
        _impl_.op_type_.op_ = CreateMaybeMessage<::codegen::OpOverload>(arena, *from._impl_.op_type_.op_);
        break;
      case kFusedOp:
        _impl_.op_type_.fused_op_ = CreateMaybeMessage<::codegen::OpOverloadList>(arena, *from._impl_.op_type_.fused_op_);
        break;
  }
  switch (return_type_case()) {
    case RETURN_TYPE_NOT_SET:
      break;
      case kOutput:
        _impl_.return_type_.output_ = CreateMaybeMessage<::codegen::Tensor>(arena, *from._impl_.return_type_.output_);
        break;
      case kOutputs:
        _impl_.return_type_.outputs_ = CreateMaybeMessage<::codegen::TensorList>(arena, *from._impl_.return_type_.outputs_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:codegen.Operation)
}
inline PROTOBUF_NDEBUG_INLINE Operation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : op_type_{},
        return_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Operation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Operation::~Operation() {
  // @@protoc_insertion_point(destructor:codegen.Operation)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operation::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_op_type()) {
    clear_op_type();
  }
  if (has_return_type()) {
    clear_return_type();
  }
  _impl_.~Impl_();
}

void Operation::clear_op_type() {
// @@protoc_insertion_point(one_of_clear_start:codegen.Operation)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (op_type_case()) {
    case kOp: {
      if (GetArena() == nullptr) {
        delete _impl_.op_type_.op_;
      }
      break;
    }
    case kFusedOp: {
      if (GetArena() == nullptr) {
        delete _impl_.op_type_.fused_op_;
      }
      break;
    }
    case OP_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = OP_TYPE_NOT_SET;
}

void Operation::clear_return_type() {
// @@protoc_insertion_point(one_of_clear_start:codegen.Operation)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (return_type_case()) {
    case kOutput: {
      if (GetArena() == nullptr) {
        delete _impl_.return_type_.output_;
      }
      break;
    }
    case kOutputs: {
      if (GetArena() == nullptr) {
        delete _impl_.return_type_.outputs_;
      }
      break;
    }
    case RETURN_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[1] = RETURN_TYPE_NOT_SET;
}


PROTOBUF_NOINLINE void Operation::Clear() {
// @@protoc_insertion_point(message_clear_start:codegen.Operation)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_op_type();
  clear_return_type();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Operation::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 4, 4, 0, 2> Operation::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967265,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Operation_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .codegen.OpOverload op = 2;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.op_type_.op_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .codegen.OpOverloadList fused_op = 3;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.op_type_.fused_op_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .codegen.Tensor output = 4;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.return_type_.output_), _Internal::kOneofCaseOffset + 4, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .codegen.TensorList outputs = 5;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.return_type_.outputs_), _Internal::kOneofCaseOffset + 4, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::codegen::OpOverload>()},
    {::_pbi::TcParser::GetTable<::codegen::OpOverloadList>()},
    {::_pbi::TcParser::GetTable<::codegen::Tensor>()},
    {::_pbi::TcParser::GetTable<::codegen::TensorList>()},
  }}, {{
  }},
};

::uint8_t* Operation::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:codegen.Operation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (op_type_case()) {
    case kOp: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::op(this),
          _Internal::op(this).GetCachedSize(), target, stream);
      break;
    }
    case kFusedOp: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::fused_op(this),
          _Internal::fused_op(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  switch (return_type_case()) {
    case kOutput: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, _Internal::output(this),
          _Internal::output(this).GetCachedSize(), target, stream);
      break;
    }
    case kOutputs: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, _Internal::outputs(this),
          _Internal::outputs(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:codegen.Operation)
  return target;
}

::size_t Operation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:codegen.Operation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (op_type_case()) {
    // .codegen.OpOverload op = 2;
    case kOp: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.op_type_.op_);
      break;
    }
    // .codegen.OpOverloadList fused_op = 3;
    case kFusedOp: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.op_type_.fused_op_);
      break;
    }
    case OP_TYPE_NOT_SET: {
      break;
    }
  }
  switch (return_type_case()) {
    // .codegen.Tensor output = 4;
    case kOutput: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.return_type_.output_);
      break;
    }
    // .codegen.TensorList outputs = 5;
    case kOutputs: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.return_type_.outputs_);
      break;
    }
    case RETURN_TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Operation::_class_data_ = {
    Operation::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Operation::GetClassData() const {
  return &_class_data_;
}

void Operation::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Operation*>(&to_msg);
  auto& from = static_cast<const Operation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:codegen.Operation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.op_type_case()) {
    case kOp: {
      _this->_internal_mutable_op()->::codegen::OpOverload::MergeFrom(
          from._internal_op());
      break;
    }
    case kFusedOp: {
      _this->_internal_mutable_fused_op()->::codegen::OpOverloadList::MergeFrom(
          from._internal_fused_op());
      break;
    }
    case OP_TYPE_NOT_SET: {
      break;
    }
  }
  switch (from.return_type_case()) {
    case kOutput: {
      _this->_internal_mutable_output()->::codegen::Tensor::MergeFrom(
          from._internal_output());
      break;
    }
    case kOutputs: {
      _this->_internal_mutable_outputs()->::codegen::TensorList::MergeFrom(
          from._internal_outputs());
      break;
    }
    case RETURN_TYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operation::CopyFrom(const Operation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:codegen.Operation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Operation::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Operation::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Operation::InternalSwap(Operation* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.op_type_, other->_impl_.op_type_);
  swap(_impl_.return_type_, other->_impl_.return_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
  swap(_impl_._oneof_case_[1], other->_impl_._oneof_case_[1]);
}

::google::protobuf::Metadata Operation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_param_2eproto_getter, &descriptor_table_param_2eproto_once,
      file_level_metadata_param_2eproto[10]);
}
// ===================================================================

class Model::_Internal {
 public:
};

Model::Model(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:codegen.Model)
}
inline PROTOBUF_NDEBUG_INLINE Model::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : inputs_{visibility, arena, from.inputs_},
        parameters_{visibility, arena, from.parameters_},
        ops_{visibility, arena, from.ops_},
        _cached_size_{0} {}

Model::Model(
    ::google::protobuf::Arena* arena,
    const Model& from)
    : ::google::protobuf::Message(arena) {
  Model* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:codegen.Model)
}
inline PROTOBUF_NDEBUG_INLINE Model::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : inputs_{visibility, arena},
        parameters_{visibility, arena},
        ops_{visibility, arena},
        _cached_size_{0} {}

inline void Model::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Model::~Model() {
  // @@protoc_insertion_point(destructor:codegen.Model)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Model::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Model::Clear() {
// @@protoc_insertion_point(message_clear_start:codegen.Model)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.inputs_.Clear();
  _impl_.parameters_.Clear();
  _impl_.ops_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Model::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> Model::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Model_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .codegen.Tensor inputs = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Model, _impl_.inputs_)}},
    // repeated .codegen.Tensor parameters = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(Model, _impl_.parameters_)}},
    // repeated .codegen.Operation ops = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(Model, _impl_.ops_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .codegen.Tensor inputs = 1;
    {PROTOBUF_FIELD_OFFSET(Model, _impl_.inputs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .codegen.Tensor parameters = 2;
    {PROTOBUF_FIELD_OFFSET(Model, _impl_.parameters_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .codegen.Operation ops = 3;
    {PROTOBUF_FIELD_OFFSET(Model, _impl_.ops_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::codegen::Tensor>()},
    {::_pbi::TcParser::GetTable<::codegen::Tensor>()},
    {::_pbi::TcParser::GetTable<::codegen::Operation>()},
  }}, {{
  }},
};

::uint8_t* Model::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:codegen.Model)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .codegen.Tensor inputs = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_inputs_size()); i < n; i++) {
    const auto& repfield = this->_internal_inputs().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .codegen.Tensor parameters = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_parameters_size()); i < n; i++) {
    const auto& repfield = this->_internal_parameters().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .codegen.Operation ops = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_ops_size()); i < n; i++) {
    const auto& repfield = this->_internal_ops().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:codegen.Model)
  return target;
}

::size_t Model::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:codegen.Model)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .codegen.Tensor inputs = 1;
  total_size += 1UL * this->_internal_inputs_size();
  for (const auto& msg : this->_internal_inputs()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .codegen.Tensor parameters = 2;
  total_size += 1UL * this->_internal_parameters_size();
  for (const auto& msg : this->_internal_parameters()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .codegen.Operation ops = 3;
  total_size += 1UL * this->_internal_ops_size();
  for (const auto& msg : this->_internal_ops()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Model::_class_data_ = {
    Model::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Model::GetClassData() const {
  return &_class_data_;
}

void Model::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Model*>(&to_msg);
  auto& from = static_cast<const Model&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:codegen.Model)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_inputs()->MergeFrom(
      from._internal_inputs());
  _this->_internal_mutable_parameters()->MergeFrom(
      from._internal_parameters());
  _this->_internal_mutable_ops()->MergeFrom(
      from._internal_ops());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Model::CopyFrom(const Model& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:codegen.Model)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Model::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Model::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Model::InternalSwap(Model* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.inputs_.InternalSwap(&other->_impl_.inputs_);
  _impl_.parameters_.InternalSwap(&other->_impl_.parameters_);
  _impl_.ops_.InternalSwap(&other->_impl_.ops_);
}

::google::protobuf::Metadata Model::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_param_2eproto_getter, &descriptor_table_param_2eproto_once,
      file_level_metadata_param_2eproto[11]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace codegen
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
